@use '../screens';
@use './breakpoints' as breakpoints;

@mixin adyen-fp-grid-classes($size, $prefix: '') {
    .#{$prefix}adyen-fp-grid-cols-#{$size} {
        display: grid;
        grid-template-columns: repeat($size, minmax(0, 1fr));
    }
    .#{$prefix}adyen-fp-col-span-#{$size} {
        grid-column: span $size / span $size;
    }
    .#{$prefix}adyen-fp-col-start-#{$size} {
        grid-column-start: $size;
    }
    .#{$prefix}adyen-fp-col-end-#{$size} {
        grid-column-end: $size;
    }
    .#{$prefix}adyen-fp-order-#{$size} {
        order: $size;
    }
}

@mixin adyen-fp-grid-utilities($prefix: '') {
    .#{$prefix}adyen-fp-auto-cols-max {
        grid-auto-columns: max-content;
    }

    .#{$prefix}adyen-fp-auto-cols-min {
        grid-auto-columns: min-content;
    }

    .#{$prefix}adyen-fp-auto-cols-auto {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(100px, max-content));
    }

    .#{$prefix}adyen-fp-col-span-auto {
        grid-column: auto;
    }

    .#{$prefix}adyen-fp-space-cols-between {
        justify-content: space-between;
    }

    .#{$prefix}adyen-fp-cols-max {
        grid-column: 1 / -1;
    }
}

@mixin adyen-fp-generate-responsive-grid-classes($size, $breakpoint: false) {
    @if $breakpoint != false {
        @include adyen-fp-grid-classes($size, '#{$breakpoint}\\:');
    } @else {
        @include adyen-fp-grid-classes($size);
    }
}

@mixin adyen-fp-create-grid() {
    @include adyen-fp-grid-utilities();

    @for $i from 1 through 12 {
        @include adyen-fp-generate-responsive-grid-classes($i);
    }

    @each $breakpoint in map-keys(breakpoints.$adyen-fp-breakpoints) {
        @include screens.adyen-fp-from-screen-size($breakpoint) {
            @include adyen-fp-grid-utilities('#{$breakpoint}\\:');

            @for $i from 1 through 12 {
                @include adyen-fp-generate-responsive-grid-classes($i, $breakpoint);
            }
        }
    }
}
