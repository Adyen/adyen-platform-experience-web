name: Download translations

on:
  workflow_dispatch:

jobs:
  download-files:
    name: Download completed translation files
    if: github.event_name == 'workflow_dispatch' && (github.ref_name == 'develop' || startsWith(github.ref_name, 'group/'))
    runs-on: ubuntu-latest
    environment: smartling-translations # provides Smartling credentials
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Run the preliminary setup steps
        uses: ./.github/actions/setup-env

      - name: Run setup steps for translation tasks
        uses: ./.github/actions/setup-smartling
        with:
          npm_token: ${{ secrets.NPM_SMARTLING_BOT_READ_TOKEN }}
          project_id: ${{ secrets.SMARTLING_PROJECT_ID }}
          user_identifier: ${{ secrets.SMARTLING_USER_IDENTIFIER }}
          user_secret: ${{ secrets.SMARTLING_USER_SECRET }}

      - name: Download and commit files
        run: |
          # Checkout new branch from the default branch
          git checkout -B ${{ env.BRANCH_NAME }} ${{ env.BASE_REF }}

          # create post-download shell script file
          echo $(dirname "${POST_DOWNLOAD_FILE_PATH}")
          mkdir -p $(dirname "${POST_DOWNLOAD_FILE_PATH}")
          touch ${{ env.POST_DOWNLOAD_FILE_PATH }}
          chmod +x ${{ env.POST_DOWNLOAD_FILE_PATH }}

          cat <<EOF >> ${POST_DOWNLOAD_FILE_PATH}
          #!/bin/sh
          # Configure the current Git user (the GitHub actor)
          git config --local user.name "${GITHUB_ACTOR}"
          git config --local user.email "${GITHUB_ACTOR}@users.noreply.github.com"

          # Stage downloaded files
          for source_path in $(jq -r '.translationSourcePaths[]' .i18nrc); do
            echo $(dirname "$source_path")
            git add $(dirname "$source_path")
          done

          if git diff-index --cached --quiet HEAD; then
            # there are no changes to commit
            echo "No translations updates"
          else
            # Create a commit for staged files and push
            git commit -m "${COMMIT_TITLE}"
            git push -u origin ${BRANCH_NAME}

            # Create a PR on the default branch (using GitHub CLI)
            gh pr create --base ${BASE_REF} --head ${BRANCH_NAME} --fill
          fi
          EOF

          # Download files from Smartling
          npx -y @adyen/smartling-bot@0.x.x download-files -p ${{ env.POST_DOWNLOAD_FILE_PATH }}
        env:
          BASE_REF: ${{ github.ref_name }}
          BRANCH_NAME: "bot/translations"
          COMMIT_TITLE: "Update translations"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          POST_DOWNLOAD_FILE_PATH: ".env/post-download.sh"
