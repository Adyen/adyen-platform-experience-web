# Do a git tag and create a release when a release branch is merged (or on demand)
name: Create a tag and GitHub release

on:
  workflow_dispatch:

  pull_request:
    types: [opened, synchronize]

jobs:
  create-github-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Run the preliminary setup steps
        uses: ./.github/actions/setup-env

      - name: Create a build and export an artifact
        run: |
          npm run build:publish

      - name: Determine the release version
        run: |
          echo "NEW_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Upload build as artifact for other jobs
        uses: actions/upload-artifact@v3
        with:
          name: adyen-adyen-platform-experience-web-${{ env.NEW_VERSION }}
          path: ./adyen-adyen-platform-experience-web-${{ env.NEW_VERSION }}.tgz
          retention-days: 1

      - name: Push tags and create a release
        id: changesets
        uses: changesets/action@v1
        with:
          # Include this to create GitHub releases and Git tags
          publish: npm run create-tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the release upload URL
        id: get_release
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: context.ref
            });
            return response.data.upload_url;

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.result }}
          asset_path: ./adyen-adyen-platform-experience-web-${{ env.NEW_VERSION }}.tgz
          asset_name: adyen-adyen-platform-experience-web-${{ env.NEW_VERSION }}.tgz
          asset_content_type: application/gzip