# Do a git tag and create a release when a release branch is merged (or on demand)
name: Create a tag and GitHub release

on:
  workflow_dispatch:

  pull_request:
    types: [closed]
    branches: ['main', 'releases/**', 'changeset-release/**']

jobs:
  create-github-release:
    permissions:
      contents: write
      actions: write
    runs-on: ubuntu-latest
    if: (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main')
      || (github.event.pull_request.merged == true && startsWith(github.head_ref, 'bump/'))
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Run the preliminary setup steps
        uses: ./.github/actions/setup-env

      - name: Create a build and export an artifact
        run: |
          npm run build:publish

      - name: Determine the release version
        run: |
          echo "NEW_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Upload build as artifact for other jobs
        uses: actions/upload-artifact@v4
        with:
          name: adyen-adyen-platform-experience-web-${{ env.NEW_VERSION }}
          path: ./adyen-adyen-platform-experience-web-${{ env.NEW_VERSION }}.tgz
          retention-days: 1

      - name: Push tags and create a release
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npm run create-tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the release upload URL
        id: get_release
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const tag = `v${process.env.NEW_VERSION}`;
            const { data: release } = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: tag
            });
            // Write the output to the file defined by GITHUB_OUTPUT (new method)
            const outputFile = process.env.GITHUB_OUTPUT;
            fs.appendFileSync(outputFile, `upload_url=${release.upload_url}\n`);

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./adyen-adyen-platform-experience-web-${{ env.NEW_VERSION }}.tgz
          asset_name: adyen-adyen-platform-experience-web-${{ env.NEW_VERSION }}.tgz
          asset_content_type: application/gzip

  trigger-npm-publish:
    permissions:
      contents: write
      actions: write
    needs: create-github-release
    uses: adyen/adyen-platform-experience-web/.github/workflows/npm-publish.yml@main
    secrets: inherit
